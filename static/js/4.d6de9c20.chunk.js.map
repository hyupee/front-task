{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/TodoInput.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/TodoTemplate.jsx","containers/TodoContainer.jsx","pages/Todo.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Input","styled","input","TodoInput","idx","onSubmit","useState","title","setTitle","placeholder","onChange","e","target","onKeyDown","keyCode","trim","ListWrap","li","ListBox","div","memo","checked","onDelete","onToggle","onUpdate","isChange","setIsChange","payload","className","onClick","TodoList","todos","map","key","TodoWrap","TodoTitle","h1","TodoBox","TodoTemplate","onCreate","TodoContainer","dispatch","useDispatch","useSelector","state","todo","handleCreate","useCallback","todoActions","handleUpdate","handleDelete","handleToggle","Todo"],"mappings":"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","file":"static/js/4.d6de9c20.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  border-bottom: 1px solid #efefef;\n  outline: none;\n  padding: 15px;\n  font-size: 2rem;\n  font-weight: 300;\n\n  &::placeholder {\n    color: #ddd;\n  }\n`;\n\nconst TodoInput = ({ idx, onSubmit, value = \"\" }) => {\n  const [title, setTitle] = useState(value);\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13 && title.trim()) {\n      onSubmit({ title, idx });\n      setTitle(\"\");\n    }\n  };\n\n  return (\n    <Input\n      placeholder=\"무엇을 해야하나요?\"\n      value={title}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n    />\n  );\n};\n\nexport default TodoInput;\n","import React, { memo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport TodoInput from \"./TodoInput\";\n\nconst ListWrap = styled.li`\n  position: relative;\n  cursor: pointer;\n  border-bottom: 1px solid #efefef;\n`;\n\nconst ListBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #fff;\n  padding: 1rem;\n  font-weight: 300;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #f9f9f9;\n  }\n\n  .todo-title {\n    width: 75%;\n    font-size: 1.5rem;\n\n    &.done {\n      text-decoration: line-through;\n      color: #ddd;\n    }\n  }\n\n  .btn-wrap {\n    width: 25%;\n\n    .btn {\n      cursor: pointer;\n      padding: 0.5rem 0.75rem;\n      border-radius: 3px;\n      margin: 0 2px;\n      transition: background-color 0.2s;\n\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.05);\n      }\n\n      &-delete {\n        color: #e74c3c;\n      }\n\n      &-update {\n        color: #3498db;\n      }\n    }\n  }\n`;\n\nconst TodoItem = ({ idx, title, checked, onDelete, onToggle, onUpdate }) => {\n  const [isChange, setIsChange] = useState(false);\n\n  const handleToggle = () => {\n    onToggle(idx);\n  };\n\n  const handleDelete = () => {\n    onDelete(idx);\n  };\n\n  const handleChangeToggle = () => {\n    setIsChange(!isChange);\n  };\n\n  const handleUpdate = payload => {\n    setIsChange(false);\n    onUpdate(payload);\n  };\n\n  return (\n    <ListWrap>\n      <ListBox>\n        {isChange ? (\n          <TodoInput onSubmit={handleUpdate} idx={idx} value={title} />\n        ) : (\n          <>\n            <p\n              className={`todo-title ${checked ? \"done\" : \"\"}`}\n              onClick={handleToggle}\n            >\n              {title}\n            </p>\n            <div className=\"btn-wrap\">\n              <span className=\"btn btn-update\" onClick={handleChangeToggle}>\n                수정\n              </span>\n              <span className=\"btn btn-delete\" onClick={handleDelete}>\n                삭제\n              </span>\n            </div>\n          </>\n        )}\n      </ListBox>\n    </ListWrap>\n  );\n};\n\nexport default memo(TodoItem);\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = ({ todos, onDelete, onUpdate, onToggle }) => {\n  return (\n    <ul>\n      {todos.map(({ title, checked }, idx) => (\n        <TodoItem\n          key={idx}\n          idx={idx}\n          title={title}\n          checked={checked}\n          onDelete={onDelete}\n          onUpdate={onUpdate}\n          onToggle={onToggle}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TodoList from \"./TodoList\";\nimport TodoInput from \"./TodoInput\";\n\nconst TodoWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 5rem 0;\n`;\n\nconst TodoTitle = styled.h1`\n  text-align: center;\n  font-size: 3rem;\n  font-weight: 300;\n  color: #d81d45;\n  margin-bottom: 1rem;\n`;\n\nconst TodoBox = styled.div`\n  width: 600px;\n  max-width: 95%;\n  background-color: #fff;\n  box-shadow: 1px 2px 5px 0 rgba(0, 0, 0, 0.1);\n`;\n\nconst TodoTemplate = ({ todos, onCreate, onUpdate, onDelete, onToggle }) => {\n  return (\n    <TodoWrap>\n      <TodoTitle>Todos</TodoTitle>\n      <TodoBox>\n        <TodoInput onSubmit={onCreate} />\n        <TodoList\n          todos={todos}\n          onToggle={onToggle}\n          onDelete={onDelete}\n          onUpdate={onUpdate}\n        />\n      </TodoBox>\n    </TodoWrap>\n  );\n};\n\nexport default TodoTemplate;\n","import React, { useCallback } from \"react\";\nimport TodoTemplate from \"../components/TodoTemplate\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as todoActions from \"../store/reducers/todo\";\n\nconst TodoContainer = () => {\n  const dispatch = useDispatch();\n\n  const { todos } = useSelector(state => state.todo);\n\n  // Create\n  const handleCreate = useCallback(\n    payload => {\n      dispatch(todoActions.createTodo(payload));\n    },\n    [dispatch]\n  );\n\n  // Update\n  const handleUpdate = useCallback(\n    payload => {\n      dispatch(todoActions.updateTodo(payload));\n    },\n    [dispatch]\n  );\n\n  // Delete\n  const handleDelete = useCallback(\n    idx => {\n      dispatch(todoActions.deleteTodo({ idx }));\n    },\n    [dispatch]\n  );\n\n  // Toggle\n  const handleToggle = useCallback(\n    idx => {\n      dispatch(todoActions.toggleTodo({ idx }));\n    },\n    [dispatch]\n  );\n\n  return (\n    <TodoTemplate\n      todos={todos}\n      onUpdate={handleUpdate}\n      onDelete={handleDelete}\n      onCreate={handleCreate}\n      onToggle={handleToggle}\n    />\n  );\n};\n\nexport default TodoContainer;\n","import React from 'react';\nimport TodoContainer from \"../containers/TodoContainer\";\n\nfunction Todo() {\n  return (\n    <TodoContainer />\n  )\n}\n\nexport default Todo\n"],"sourceRoot":""}